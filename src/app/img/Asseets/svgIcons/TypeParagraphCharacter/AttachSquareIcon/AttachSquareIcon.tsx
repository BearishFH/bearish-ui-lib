import { ISvg } from '../../SvgPropsType';

export const AttachSquareIcon: React.FC<ISvg> = ({
  color,
  className,
  iconType = 'linear',
  w = 24,
}) => {
  const renderIcon = () => {
    switch (iconType) {
      case 'linear':
      case 'outline':
      default:
        return (
          <>
            <path
              d="M12.2018 11.8L10.7918 13.21C10.0118 13.99 10.0118 15.26 10.7918 16.04C11.5718 16.82 12.8418 16.82 13.6218 16.04L15.8419 13.82C17.4019 12.26 17.4019 9.72999 15.8419 8.15999C14.2819 6.59999 11.7518 6.59999 10.1818 8.15999L7.76184 10.58C6.42184 11.92 6.42184 14.09 7.76184 15.43"
              stroke="currentColor"
              strokeWidth="1.5"
              strokeLinecap="round"
              strokeLinejoin="round"
            />
            <path
              d="M9.00195 22H15.002C20.002 22 22.002 20 22.002 15V9C22.002 4 20.002 2 15.002 2H9.00195C4.00195 2 2.00195 4 2.00195 9V15C2.00195 20 4.00195 22 9.00195 22Z"
              stroke="currentColor"
              strokeWidth="1.5"
              strokeLinecap="round"
              strokeLinejoin="round"
            />
          </>
        );

      case 'bold':
        return (
          <>
            <path
              d="M16.192 2H7.81195C4.17195 2 2.00195 4.17 2.00195 7.81V16.18C2.00195 19.83 4.17195 22 7.81195 22H16.182C19.822 22 21.992 19.83 21.992 16.19V7.81C22.002 4.17 19.832 2 16.192 2ZM16.372 14.35L14.152 16.57C13.612 17.11 12.912 17.37 12.212 17.37C11.512 17.37 10.802 17.1 10.272 16.57C9.75195 16.05 9.46195 15.36 9.46195 14.63C9.46195 13.9 9.75195 13.2 10.272 12.69L11.682 11.28C11.972 10.99 12.452 10.99 12.742 11.28C13.032 11.57 13.032 12.05 12.742 12.34L11.332 13.75C11.092 13.99 10.962 14.3 10.962 14.63C10.962 14.96 11.092 15.28 11.332 15.51C11.822 16 12.612 16 13.102 15.51L15.322 13.29C16.592 12.02 16.592 9.96 15.322 8.69C14.052 7.42 11.992 7.42 10.722 8.69L8.30195 11.11C7.79195 11.62 7.51195 12.29 7.51195 13C7.51195 13.71 7.79195 14.39 8.30195 14.89C8.59195 15.18 8.59195 15.66 8.30195 15.95C8.01195 16.24 7.53195 16.24 7.24195 15.95C6.44195 15.18 6.00195 14.13 6.00195 13.01C6.00195 11.89 6.43195 10.84 7.22195 10.05L9.64195 7.63C11.492 5.78 14.512 5.78 16.362 7.63C18.222 9.48 18.222 12.5 16.372 14.35Z"
              fill="currentColor"
            />
          </>
        );

      case 'twoTone':
        return (
          <>
            <path
              opacity="0.4"
              d="M12.2018 11.8L10.7918 13.21C10.0118 13.99 10.0118 15.26 10.7918 16.04C11.5718 16.82 12.8418 16.82 13.6218 16.04L15.8419 13.82C17.4019 12.26 17.4019 9.72999 15.8419 8.15999C14.2819 6.59999 11.7518 6.59999 10.1818 8.15999L7.76184 10.58C6.42184 11.92 6.42184 14.09 7.76184 15.43"
              stroke="currentColor"
              strokeWidth="1.5"
              strokeLinecap="round"
              strokeLinejoin="round"
            />
            <path
              d="M9.00195 22H15.002C20.002 22 22.002 20 22.002 15V9C22.002 4 20.002 2 15.002 2H9.00195C4.00195 2 2.00195 4 2.00195 9V15C2.00195 20 4.00195 22 9.00195 22Z"
              stroke="currentColor"
              strokeWidth="1.5"
              strokeLinecap="round"
              strokeLinejoin="round"
            />
          </>
        );

      case 'bulk':
        return (
          <>
            <path
              opacity="0.4"
              d="M16.1917 2H7.82172C4.18172 2 2.01172 4.17 2.01172 7.81V16.18C2.01172 19.82 4.18172 21.99 7.82172 21.99H16.1917C19.8317 21.99 22.0017 19.82 22.0017 16.18V7.81C22.0017 4.17 19.8317 2 16.1917 2Z"
              fill="currentColor"
            />
            <path
              d="M12.2017 17.3799C11.5017 17.3799 10.7917 17.1099 10.2617 16.5799C9.74172 16.0599 9.45172 15.3699 9.45172 14.6399C9.45172 13.9099 9.74172 13.2099 10.2617 12.6999L11.6717 11.2899C11.9617 10.9999 12.4417 10.9999 12.7317 11.2899C13.0217 11.5799 13.0217 12.0599 12.7317 12.3499L11.3217 13.7599C11.0817 13.9999 10.9517 14.3099 10.9517 14.6399C10.9517 14.9699 11.0817 15.2899 11.3217 15.5199C11.8117 16.0099 12.6017 16.0099 13.0917 15.5199L15.3117 13.2999C16.5817 12.0299 16.5817 9.96994 15.3117 8.69994C14.0417 7.42994 11.9817 7.42994 10.7117 8.69994L8.29169 11.1199C7.78169 11.6299 7.50171 12.2999 7.50171 13.0099C7.50171 13.7199 7.78169 14.3999 8.29169 14.8999C8.58169 15.1899 8.58169 15.6699 8.29169 15.9599C8.00169 16.2499 7.52169 16.2499 7.23169 15.9599C6.44169 15.1699 6.01172 14.1199 6.01172 12.9999C6.01172 11.8799 6.44169 10.8299 7.23169 10.0399L9.65173 7.61992C11.5017 5.76992 14.5217 5.76992 16.3717 7.61992C18.2217 9.46992 18.2217 12.4899 16.3717 14.3399L14.1517 16.5599C13.6117 17.1099 12.9117 17.3799 12.2017 17.3799Z"
              fill="currentColor"
            />
          </>
        );

      case 'broken':
        return (
          <>
            <path
              d="M2.00195 13.02V15C2.00195 20 4.00195 22 9.00195 22H15.002C20.002 22 22.002 20 22.002 15V9C22.002 4 20.002 2 15.002 2H9.00195C4.00195 2 2.00195 4 2.00195 9"
              stroke="currentColor"
              strokeWidth="1.5"
              strokeLinecap="round"
              strokeLinejoin="round"
            />
            <path
              d="M12.2018 11.8L10.7918 13.21C10.0118 13.99 10.0118 15.26 10.7918 16.04C11.5718 16.82 12.8418 16.82 13.6218 16.04L15.8419 13.82C17.4019 12.26 17.4019 9.72999 15.8419 8.15999C14.2819 6.59999 11.7518 6.59999 10.1818 8.15999L7.76184 10.58C6.42184 11.92 6.42184 14.09 7.76184 15.43"
              stroke="currentColor"
              strokeWidth="1.5"
              strokeLinecap="round"
              strokeLinejoin="round"
            />
          </>
        );
    }
  };

  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width={w}
      height={w}
      viewBox="0 0 24 24"
      fill="none"
      style={{ flexShrink: 0, color: color }}
      className={`bearishSvg ${className}`}
    >
      {renderIcon()}
    </svg>
  );
};
